#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Shifted key codes for UK keyboard layout
#define DQUOT &kp LS(NUM_2)
#define GBP   &kp LS(NUM_3)

#define ATSMB &kp RS(QUOT)
#define PIPES &kp RS(NON_US_BSLH)

// Shift on Hold / Parenthesis on Tap
#define SPCCDT_L &mt LSFT LPAR
#define SPCCDT_R &mt RSFT RPAR

// Layer on Hold / Key on Tap
#define DEL_L1 &lt 1 DEL
#define RET_L2 &lt 2 RET
#define A_L1    &lt 1 A
#define SCLN_L2 &lt 2 SCLN
#define RET_L4 &lt 4 RET

// Media Keys
#define PREVI &cp M_PREV
#define PLAY  &cp M_PLAY
#define NEXT  &cp M_NEXT

// Game keys
// Random-ish unused buttons for binding
#define GAME_1 LS(LC(LA(N1)))
#define GAME_2 LS(LC(LA(N2)))
#define GAME_3 LS(LC(LA(N3)))

// Bluetooth Profile Management
#define BTCLR &bt BT_CLR
#define BT1 &bt BT_SEL 0
#define BT2 &bt BT_SEL 1
#define BT3 &bt BT_SEL 2
#define BT4 &bt BT_SEL 3
#define BT5 &bt BT_SEL 4
#define TOG_OUT &out OUT_TOG

// Layer swap macros
// To account for not having a screen, have a tiny system tray application
// running the shows the current layer. Using HID or similar would be better,
// but for now, just report layer changes using (hopefully) unique button presses.
// Current layer here is more "current base layer" not the actual current layer.
#define DEFAULT_LAYER LS(LC(LA(LG(N1))))
#define GAME_LAYER LS(LC(LA(LG(N2))))
#define MAC_LAYER LS(LC(LA(LG(N3))))

// TODO: Encoder push missing.
// TODO: Mouse HID for wheel events.

// Set encoder resolutions
&left_encoder {
    resolution = <2>;
};

&right_encoder {
    resolution = <2>;
};

/ {
    macros {
        from_game: from_game {
            label = "ZM_from_game";
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp DEFAULT_LAYER>
                , <&macro_tap &tog 3>
                ;
        };

        to_game: to_game {
            label = "ZM_to_game";
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp GAME_LAYER>
                , <&macro_tap &tog 3>
                ;
        };

        from_mac: from_mac {
            label = "ZM_from_mac";
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp DEFAULT_LAYER>
                , <&macro_tap &tog 5>
                ;
        };

        to_mac: to_mac {
            label = "ZM_to_mac";
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp MAC_LAYER>
                , <&macro_tap &tog 5>
                ;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1   |  2  |  3   |  4   |   5    |                  |    6   |  7 |  8  |  9  |   0  |   L³  |
// |  TAB  |  Q   |  W  |  E   |  R   |   T    |                  |    Y   |  U |  I  |  O  |   P  |   \   |
// | ⌃     | A/L¹ |  S  |  D   |  F   |   G    |                  |    H   |  J |  K  |  L  | ;/L² |   '   |
// | ( / ⇧ |  Z   |  X  |  C   |  V   |   B    |       |  | MUTE  |    N   |  M |  ,  |  .  |   /  | ) / ⇧ |
//                | ALT | GUI  |  [   | DEL/L¹ | SPACE |  | BKSPC | RET/L² |  ] | ALT | GUI |
            bindings = <
&kp ESC  &kp NUM_1 &kp NUM_2 &kp NUM_3 &kp NUM_4 &kp NUM_5                  &kp NUM_6 &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp NUM_0 &to_game
&kp TAB  &kp Q     &kp W     &kp E     &kp R     &kp T                      &kp Y     &kp U     &kp I     &kp O     &kp P     &kp 0x64
&kp LCTL A_L1      &kp S     &kp D     &kp F     &kp G                      &kp H     &kp J     &kp K     &kp L     SCLN_L2   &kp QUOT
SPCCDT_L &kp Z     &kp X     &kp C     &kp V     &kp B  &none    &cp M_MUTE &kp N     &kp M     &kp CMMA  &kp DOT   &kp FSLH  SPCCDT_R
                   &kp LALT  &kp LGUI  &kp LBKT  DEL_L1 &kp SPC  &kp BKSP   RET_L2    &kp RBKT  &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp PGDN PGUP &inc_dec_cp M_VOLU M_VOLD>;
        };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// |       |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |  0    |  F12  |
// |       |-----|  !  |  %   |  =   |  +   |                   |  -   |  _    |  ^    |      |       |       |
// |       |     |     |      |      |  ~   |        |  |       |  $   |  &    |  _    |      |       |       |
//               |     |      |      |------|        |  |       |      |       |       |      |
            bindings = <
&trans &kp F1    &kp F2    &kp F3    &kp F4    &kp F5                   &kp F6    &kp F7    &kp F8    &kp F9    &kp F10   &kp F11
&trans &kp NUM_1 &kp NUM_2 &kp NUM_3 &kp NUM_4 &kp NUM_5                &kp NUM_6 &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp NUM_0 &kp F12
&trans &trans    &kp EXCL  &kp PRCNT &kp EQL   &kp PLUS                 &kp MINUS &kp UNDER &kp CARET &trans    &trans    &trans
&trans &trans    &trans    &trans    &trans    &trans   &trans   &trans &kp DLLR  &kp ASTRK &kp AMPS  &trans    &trans    &trans
                 &trans    &trans    &trans    &trans   &trans   &trans &trans    &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp PGDN PGUP &inc_dec_cp M_VOLU M_VOLD>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// | CLR | BT1  | BT2  | BT3   | BT4   | BT5  |                |      |      |       |      |       | TOGG  |
// |     |      |  ^   |       |       |      |                |      |      |       |      |       |       |
// |     |  <   |  V   |  >    |   [   |      |                |  #   |  ]   |       |      |-------|       |
// |     | PREV | PLAY | NEXT  |       |      |      |  |      |      |  ~   |       |      |       |       |
//              |      |       |       |  `   |      |  |      |------|      |       |      |
            bindings = <
BTCLR  BT1      BT2      BT3      BT4      BT5                      &trans   &trans     &trans  &trans &trans TOG_OUT
&trans &trans   &kp UARW &trans   &trans   &trans                   &trans   &trans     &trans  &trans &trans &trans
&trans &kp LARW &kp DARW &kp RARW &kp LBKT &trans                   &kp 0x32 &kp RBKT   &trans  &trans &trans &trans
&trans PREVI    PLAY     NEXT     &trans   &trans   &trans  &trans  &trans   &kp TILDE2 &trans  &trans &trans &trans
                &trans   &trans   &trans   &kp GRAV &trans  &trans  &trans   &trans     &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp PGDN PGUP &inc_dec_cp M_VOLU M_VOLD>;
        };

        gaming_layer {
// ------------------------------------------------------------------------------------------------------------
// | ESC |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   L⁰  |
// | TAB |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   \   |
// | ⌃   |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | ⇧   |  Z  |  X  |  C   |  V   |  B   |  Key3  |  |       |  N   |  M    |  ,    |  .   |   /   |   ⇧   |
//             | ALT |  RET |  I   |  M   |  SPACE |  | BKSPC | RET  |  ]    | ALT   | GUI  |
            bindings = <
&kp ESC  &kp NUM_1 &kp NUM_2 &kp NUM_3 &kp NUM_4 &kp NUM_5                  &kp NUM_6 &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp NUM_0 &from_game
&kp TAB  &kp Q     &kp W     &kp E     &kp R     &kp T                      &kp Y     &kp U     &kp I     &kp O     &kp P     &kp 0x64
&kp LCTL &kp A     &kp S     &kp D     &kp F     &kp G                      &kp H     &kp J     &kp K     &kp L     &kp SCLN  &kp QUOT
&kp LSFT &kp Z     &kp X     &kp C     &kp V     &kp B  &kp GAME_1 &none    &kp N     &kp M     &kp CMMA  &kp DOT   &kp FSLH  &kp RSFT
                   &kp LALT  &kp RET   &kp I     &kp M  &kp SPC    &kp BKSP RET_L4    &kp RBKT  &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp GAME_2 GAME_3 &inc_dec_cp M_VOLU M_VOLD>;
        };

        gaming_alt_layer {
// ------------------------------------------------------------------------------------------------------------
// |     |  F1 | F2  |  F3  |  F4  |  F5  |                   |  F6  |   F7  |   F8  |  F9  |  F10  |  F11  |
// |     |     |     |      |      |      |                   |      |       |       |      |       |  F12  |
// |     |     |     |      |      |      |                   |      |       |       |      |       |       |
// |     |     |     |      |      |      |        |  |       |      |       |       |      |       |       |
//             |     |      |      |      |        |  |       |------|       |       |      |
            bindings = <
&trans &kp F1 &kp F2 &kp F3 &kp F4 &kp F5                 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11
&trans &trans &trans &trans &trans &trans                 &trans &trans &trans &trans &trans  &kp F12
&trans &trans &trans &trans &trans &trans                 &trans &trans &trans &trans &trans  &trans
&trans &trans &trans &trans &trans &trans &trans  &trans  &trans &trans &trans &trans &trans  &trans
              &trans &trans &trans &trans &trans  &trans  &trans &trans &trans &trans
            >;

            sensor-bindings = <&inc_dec_kp GAME_2 GAME_3 &inc_dec_cp M_VOLU M_VOLD>;
        };
    };
};
