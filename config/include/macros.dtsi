// Macros for keyboards.

// Layer swap macros
// To account for not having a screen, have a tiny system tray application
// running the shows the current layer. Using HID or similar would be better,
// but for now, just report layer changes using (hopefully) unique button presses.
// Current layer here is more "current base layer" not the actual current layer.
#define NOTIFY_DEFAULT LS(LC(LA(LG(N1))))
#define NOTIFY_GAME LS(LC(LA(LG(N2))))
#define NOTIFY_MAC LS(LC(LA(LG(N3))))

#define INFO_BINDING LS(LC(LA(LG(N0))))
#define TOGGLE_BINDING LS(LC(LA(LG(N9))))

#define SWAP(NAME, NOTIFY_BIND, LAYER_ID) \
    ZMK_MACRO(NAME, \
    wait-ms = <0>; \
    tap-ms = <0>; \
    bindings \
        = <&macro_tap &kp NOTIFY_BIND> \
        , <&macro_tap &tog LAYER_ID> \
        ; \
    )

SWAP(from_game, NOTIFY_DEFAULT, GAME)
SWAP(to_game, NOTIFY_GAME, GAME)

SWAP(f_mac, NOTIFY_DEFAULT, MAC)
SWAP(t_mac, NOTIFY_MAC, MAC)

// Similarly to layer swap macros, have macros to notify the output mode
// has changed (USB or BLE), then perform the actual change.
// There is two notifications sent here, such that the both the first and
// second device (i.e. PC then Mac) both get the notification. This means
// the tray icon will swap to the correct mode on both devices.

#define OUTPUT_SWAP(NAME, OUTPUT_TOGGLE) \
    ZMK_MACRO(NAME, \
    wait-ms = <100>; \
    tap-ms = <0>; \
    bindings \
        = <&macro_tap &kp TOGGLE_BINDING> \
        , <&macro_tap OUTPUT_TOGGLE> \
        , <&macro_tap &kp TOGGLE_BINDING> \
        ; \
    )

OUTPUT_SWAP(toggle_bt_usb, TOG_OUT)
OUTPUT_SWAP(to_bt, TOG_BLE)
OUTPUT_SWAP(to_usb, TOG_USB)
OUTPUT_SWAP(bt_pc, PC_BT)
OUTPUT_SWAP(bt_mac, MAC_BT)
